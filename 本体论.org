#+Title: 本体论相关的内容,涉及逻辑和计算相关等理论

* "摆脱复杂图谱术语，7个原则搞定Schema建模"一文的摘要
对OpenSPG Schema建模的总结
** 对历史上相关工作的简评
#+CAPTION: 知识建模方法回顾
[[file:./images/KG/知识图谱相关工作.png]]
*** 关系型数据库
- 用实体及其属性（关系也体现为外键）对数据结构化
- 不包括语义的建模
- 容易存在大量的数据冗余,多跳跨表查复杂、效率低.
*** 知识工程
- 本体表示：将知识表示为辑符号的形式，构建特定领域概念类别及其层级细分关系，并用一阶谓词逻辑、生产式规则表示领域专家经验，支持知识的符合推理。
- 框架(frame)表示：强调将所描述的每类事物都抽象为出特定的slot-value的结构化表示(例如目前百科词条就是frame表示)。
- 弊端：人工构建成本太高，知识获取困难。
*** 语义网
- 出发点是用文档中的数据关联+逻辑描述,让计算机能认识和理解世界万物.
- 语义网发展过程中先后制定了基于描述逻辑的DAML、RDF、OWL、OWL2等语言.
- 语义完备性的强调,成为逻辑学家的游戏,无法工业化落地.
*** 知识图谱
- 以基本的SPO三元组,表示实体间的事实关系.
- 但SPO对由多个要素（>2）共同决定的多元关系表示存在缺陷
  - 图谱schema的设计是主观的
  - 不同图谱的异构导致知识难以对齐融合。
*** 事理图谱
- 将事件以及事件之间的关系抽取并抽象出来,构建描述事件之间演化规律和模式的事理逻辑知识库.
- 事件有frame框架表示、verb+nound表示等流派。
- 问题是还需要：
  - 对从实例到概念，从事实到常识的整体架构
  - 每种事件的实例需要frame表示
  - 事件概念体系需要本体表示
  - 事件实例之间的事实关系需要spo表示
  - 事件概念之间的顺承、因果等需要逻辑表达
*** 常识概念图谱
- 围绕常识性概念建立的实体以及实体之间的关系，帮助自然语言文本的理解。
- 涵盖:
  - “是什么”的概念Taxonomy体系结构,
  - “什么样”的概念属性关系,
  - “给什么”的概念承接关系.
*** 知识超图
超图(Hypergraph)：就是每一个边可以包含两个以上的点所构成的图，解决多元知识的表示。
** OpenSPG认为的原则：(关键是，概念、实体、事件三种类型，在OpenSPG理论是什么？)
*** 类型选择原则
- 原则 1：复杂多元结构用实体类型或事件类型
- 原则 2：扁平化的分类标签用概念类型
- 原则 3：实体/事件多类型使用动态分类原则
- 原则 4：概念类型不继承
*** 属性/关系选择原则
- 原则 5：关系的指向遵守由动到静原则，反之被禁止
- 原则 6：概念类型之间只允许系统指定的7大类语义关系
- 原则 7：属性尽量标准化
* 附录： 一些杂小概念!
** URL,URI,IRI, URN, PURL等等
它们的混淆是历史造成的,现在基本都统一在URI/IRI的观点下了.
问题的实质是, Name要承担什么样的功能,或语义,参看"https://www.w3.org/DesignIssues/"
- URL是有"物理"含义的,强调访问功能!
  - <scheme>://[<user>:<password>@]<host>[:<port>]/<path>[?<query>][#<fragment>]
- URN, URI/IRI是URL的扩展,去掉了"物理"含义,强调在信息空间中的Identifier的功能.通用语法是
  - <scheme name>:<hierarchical part>[?<query>][#<fragment>]
  URI只支持Ascii,IRI可以理解为URI的国际化版本.
  URN更早,URN基本被淡化了!所谓的淡化,就是URN中的语义,在当代不需要了!
- PURL(Persistent URL)是用URL实现URN功能的例子.
  由于PURL加了一层映射(如"https://purl.archive.org/"),PURL会导致现有的互联网架构发生变化，做这种改动需要进行大量的工作.因此目前还是URL的天下.
